<?xml version="1.0"?>
<!-- Custom -->
<root>
    <item>
        <name>Option_R = Switch Input Methods</name>
        <appendix></appendix>
        <identifier>option_r</identifier>
        <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
    </item>

    <item>
        <name>Command_R = Switch Input Methods</name>
        <appendix></appendix>
        <identifier>command_r</identifier>
        <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
    </item>

    <item>
        <name>^ + h -> ⌫</name>
        <appendix></appendix>
        <identifier>control_h_to_delete</identifier>
        <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
    </item>

    <item>
        <name>Fn + i -> ↩</name>
        <appendix></appendix>
        <identifier>fn_i_to_return</identifier>
        <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::FN, KeyCode::RETURN</autogen>
    </item>

    <item>
        <name>Fn + u -> ⌫</name>
        <appendix></appendix>
        <identifier>fn_u_to_delete</identifier>
        <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::FN, KeyCode::DELETE</autogen>
    </item>

    <item>
        <name>Spectacle</name>
        <appendix>Now used for Keyboard Maestro</appendix>
        <identifier>spectacle</identifier>
        <autogen>
            __KeyToKey__ KeyCode::Q, ModifierFlag::FN,
            KeyCode::Q, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::W, ModifierFlag::FN,
            KeyCode::W, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::E, ModifierFlag::FN,
            KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::R, ModifierFlag::FN,
            KeyCode::R, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::T, ModifierFlag::FN,
            KeyCode::T, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::A, ModifierFlag::FN,
            KeyCode::A, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::S, ModifierFlag::FN,
            KeyCode::S, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::D, ModifierFlag::FN,
            KeyCode::D, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::F, ModifierFlag::FN,
            KeyCode::F, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
        <autogen>
            __KeyToKey__ KeyCode::G, ModifierFlag::FN,
            KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L
        </autogen>
    </item>
</root>
